'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.closeMapAtIndexUpdater = exports.toggleFullScreenUpdater = exports.toggleSplitMapUpdater = exports.receiveMapConfigUpdater = exports.togglePerspectiveUpdater = exports.fitBoundsUpdater = exports.updateMapUpdater = undefined;

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _geoViewport = require('@mapbox/geo-viewport');

var _geoViewport2 = _interopRequireDefault(_geoViewport);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* Updaters */
var updateMapUpdater = exports.updateMapUpdater = function updateMapUpdater(state, action) {
  return (0, _extends3.default)({}, state, action.payload || {});
};

var fitBoundsUpdater = exports.fitBoundsUpdater = function fitBoundsUpdater(state, action) {
  var bounds = action.payload;

  var _geoViewport$viewport = _geoViewport2.default.viewport(bounds, [state.width, state.height]),
      center = _geoViewport$viewport.center,
      zoom = _geoViewport$viewport.zoom;

  return (0, _extends3.default)({}, state, {
    latitude: center[1],
    longitude: center[0],
    zoom: zoom
  });
};

var togglePerspectiveUpdater = exports.togglePerspectiveUpdater = function togglePerspectiveUpdater(state, action) {
  return (0, _extends3.default)({}, state, {
    pitch: state.dragRotate ? 0 : 50,
    bearing: state.dragRotate ? 0 : 24
  }, {
    dragRotate: !state.dragRotate
  });
};

var receiveMapConfigUpdater = exports.receiveMapConfigUpdater = function receiveMapConfigUpdater(state, action) {
  var _ref = action.payload.mapState || {},
      _ref$isSplit = _ref.isSplit,
      isSplit = _ref$isSplit === undefined ? false : _ref$isSplit;

  return (0, _extends3.default)({}, state, action.payload.mapState || {}, {
    isSplit: isSplit
  }, isSplit ? getMapDimForSplitMap(isSplit, state) : {});
};

var toggleSplitMapUpdater = exports.toggleSplitMapUpdater = function toggleSplitMapUpdater(state, action) {
  return (0, _extends3.default)({}, state, {
    isSplit: !state.isSplit
  }, getMapDimForSplitMap(!state.isSplit, state));
};

var toggleFullScreenUpdater = exports.toggleFullScreenUpdater = function toggleFullScreenUpdater(state, action) {
  return (0, _extends3.default)({}, state, {
    isFullScreen: !state.isFullScreen
    // ...getMapDimForFullScreen(!state.isFullScreen, state)
  });
};

var closeMapAtIndexUpdater = exports.closeMapAtIndexUpdater = function closeMapAtIndexUpdater(state, action) {
  return toggleSplitMapUpdater(state, action);
};

// Helpers
function getMapDimForSplitMap(isSplit, state) {
  return {
    width: isSplit ? state.width / 2 : state.width * 2
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9yZWR1Y2Vycy9tYXAtc3RhdGUtdXBkYXRlcnMuanMiXSwibmFtZXMiOlsidXBkYXRlTWFwVXBkYXRlciIsInN0YXRlIiwiYWN0aW9uIiwicGF5bG9hZCIsImZpdEJvdW5kc1VwZGF0ZXIiLCJib3VuZHMiLCJ2aWV3cG9ydCIsIndpZHRoIiwiaGVpZ2h0IiwiY2VudGVyIiwiem9vbSIsImxhdGl0dWRlIiwibG9uZ2l0dWRlIiwidG9nZ2xlUGVyc3BlY3RpdmVVcGRhdGVyIiwicGl0Y2giLCJkcmFnUm90YXRlIiwiYmVhcmluZyIsInJlY2VpdmVNYXBDb25maWdVcGRhdGVyIiwibWFwU3RhdGUiLCJpc1NwbGl0IiwiZ2V0TWFwRGltRm9yU3BsaXRNYXAiLCJ0b2dnbGVTcGxpdE1hcFVwZGF0ZXIiLCJ0b2dnbGVGdWxsU2NyZWVuVXBkYXRlciIsImlzRnVsbFNjcmVlbiIsImNsb3NlTWFwQXRJbmRleFVwZGF0ZXIiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQUE7Ozs7OztBQUVBO0FBQ08sSUFBTUEsOENBQW1CLFNBQW5CQSxnQkFBbUIsQ0FBQ0MsS0FBRCxFQUFRQyxNQUFSO0FBQUEsb0NBQzNCRCxLQUQyQixFQUUxQkMsT0FBT0MsT0FBUCxJQUFrQixFQUZRO0FBQUEsQ0FBekI7O0FBS0EsSUFBTUMsOENBQW1CLFNBQW5CQSxnQkFBbUIsQ0FBQ0gsS0FBRCxFQUFRQyxNQUFSLEVBQW1CO0FBQ2pELE1BQU1HLFNBQVNILE9BQU9DLE9BQXRCOztBQURpRCw4QkFFMUIsc0JBQVlHLFFBQVosQ0FBcUJELE1BQXJCLEVBQTZCLENBQ2xESixNQUFNTSxLQUQ0QyxFQUVsRE4sTUFBTU8sTUFGNEMsQ0FBN0IsQ0FGMEI7QUFBQSxNQUUxQ0MsTUFGMEMseUJBRTFDQSxNQUYwQztBQUFBLE1BRWxDQyxJQUZrQyx5QkFFbENBLElBRmtDOztBQU9qRCxvQ0FDS1QsS0FETDtBQUVFVSxjQUFVRixPQUFPLENBQVAsQ0FGWjtBQUdFRyxlQUFXSCxPQUFPLENBQVAsQ0FIYjtBQUlFQztBQUpGO0FBTUQsQ0FiTTs7QUFlQSxJQUFNRyw4REFBMkIsU0FBM0JBLHdCQUEyQixDQUFDWixLQUFELEVBQVFDLE1BQVI7QUFBQSxvQ0FDbkNELEtBRG1DLEVBRW5DO0FBQ0RhLFdBQU9iLE1BQU1jLFVBQU4sR0FBbUIsQ0FBbkIsR0FBdUIsRUFEN0I7QUFFREMsYUFBU2YsTUFBTWMsVUFBTixHQUFtQixDQUFuQixHQUF1QjtBQUYvQixHQUZtQztBQU10Q0EsZ0JBQVksQ0FBQ2QsTUFBTWM7QUFObUI7QUFBQSxDQUFqQzs7QUFTQSxJQUFNRSw0REFBMEIsU0FBMUJBLHVCQUEwQixDQUFDaEIsS0FBRCxFQUFRQyxNQUFSLEVBQW1CO0FBQUEsYUFDOUJBLE9BQU9DLE9BQVAsQ0FBZWUsUUFBZixJQUEyQixFQURHO0FBQUEsMEJBQ2pEQyxPQURpRDtBQUFBLE1BQ2pEQSxPQURpRCxnQ0FDdkMsS0FEdUM7O0FBR3hELG9DQUNLbEIsS0FETCxFQUVNQyxPQUFPQyxPQUFQLENBQWVlLFFBQWYsSUFBMkIsRUFGakM7QUFHRUM7QUFIRixLQUlNQSxVQUFVQyxxQkFBcUJELE9BQXJCLEVBQThCbEIsS0FBOUIsQ0FBVixHQUFpRCxFQUp2RDtBQU1ELENBVE07O0FBV0EsSUFBTW9CLHdEQUF3QixTQUF4QkEscUJBQXdCLENBQUNwQixLQUFELEVBQVFDLE1BQVI7QUFBQSxvQ0FDaENELEtBRGdDO0FBRW5Da0IsYUFBUyxDQUFDbEIsTUFBTWtCO0FBRm1CLEtBR2hDQyxxQkFBcUIsQ0FBQ25CLE1BQU1rQixPQUE1QixFQUFxQ2xCLEtBQXJDLENBSGdDO0FBQUEsQ0FBOUI7O0FBTUEsSUFBTXFCLDREQUEwQixTQUExQkEsdUJBQTBCLENBQUNyQixLQUFELEVBQVFDLE1BQVI7QUFBQSxvQ0FDbENELEtBRGtDO0FBRXJDc0Isa0JBQWMsQ0FBQ3RCLE1BQU1zQjtBQUNyQjtBQUhxQztBQUFBLENBQWhDOztBQU1BLElBQU1DLDBEQUF5QixTQUF6QkEsc0JBQXlCLENBQUN2QixLQUFELEVBQVFDLE1BQVI7QUFBQSxTQUNwQ21CLHNCQUFzQnBCLEtBQXRCLEVBQTZCQyxNQUE3QixDQURvQztBQUFBLENBQS9COztBQUdQO0FBQ0EsU0FBU2tCLG9CQUFULENBQThCRCxPQUE5QixFQUF1Q2xCLEtBQXZDLEVBQThDO0FBQzVDLFNBQU87QUFDTE0sV0FBT1ksVUFBVWxCLE1BQU1NLEtBQU4sR0FBYyxDQUF4QixHQUE0Qk4sTUFBTU0sS0FBTixHQUFjO0FBRDVDLEdBQVA7QUFHRCIsImZpbGUiOiJtYXAtc3RhdGUtdXBkYXRlcnMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZ2VvVmlld3BvcnQgZnJvbSAnQG1hcGJveC9nZW8tdmlld3BvcnQnO1xuXG4vKiBVcGRhdGVycyAqL1xuZXhwb3J0IGNvbnN0IHVwZGF0ZU1hcFVwZGF0ZXIgPSAoc3RhdGUsIGFjdGlvbikgPT4gKHtcbiAgLi4uc3RhdGUsXG4gIC4uLihhY3Rpb24ucGF5bG9hZCB8fCB7fSlcbn0pO1xuXG5leHBvcnQgY29uc3QgZml0Qm91bmRzVXBkYXRlciA9IChzdGF0ZSwgYWN0aW9uKSA9PiB7XG4gIGNvbnN0IGJvdW5kcyA9IGFjdGlvbi5wYXlsb2FkO1xuICBjb25zdCB7Y2VudGVyLCB6b29tfSA9IGdlb1ZpZXdwb3J0LnZpZXdwb3J0KGJvdW5kcywgW1xuICAgIHN0YXRlLndpZHRoLFxuICAgIHN0YXRlLmhlaWdodFxuICBdKTtcblxuICByZXR1cm4ge1xuICAgIC4uLnN0YXRlLFxuICAgIGxhdGl0dWRlOiBjZW50ZXJbMV0sXG4gICAgbG9uZ2l0dWRlOiBjZW50ZXJbMF0sXG4gICAgem9vbVxuICB9O1xufTtcblxuZXhwb3J0IGNvbnN0IHRvZ2dsZVBlcnNwZWN0aXZlVXBkYXRlciA9IChzdGF0ZSwgYWN0aW9uKSA9PiAoe1xuICAuLi5zdGF0ZSxcbiAgLi4ue1xuICAgIHBpdGNoOiBzdGF0ZS5kcmFnUm90YXRlID8gMCA6IDUwLFxuICAgIGJlYXJpbmc6IHN0YXRlLmRyYWdSb3RhdGUgPyAwIDogMjRcbiAgfSxcbiAgZHJhZ1JvdGF0ZTogIXN0YXRlLmRyYWdSb3RhdGVcbn0pO1xuXG5leHBvcnQgY29uc3QgcmVjZWl2ZU1hcENvbmZpZ1VwZGF0ZXIgPSAoc3RhdGUsIGFjdGlvbikgPT4ge1xuICBjb25zdCB7aXNTcGxpdCA9IGZhbHNlfSA9IGFjdGlvbi5wYXlsb2FkLm1hcFN0YXRlIHx8IHt9O1xuXG4gIHJldHVybiB7XG4gICAgLi4uc3RhdGUsXG4gICAgLi4uKGFjdGlvbi5wYXlsb2FkLm1hcFN0YXRlIHx8IHt9KSxcbiAgICBpc1NwbGl0LFxuICAgIC4uLihpc1NwbGl0ID8gZ2V0TWFwRGltRm9yU3BsaXRNYXAoaXNTcGxpdCwgc3RhdGUpIDoge30pXG4gIH07XG59O1xuXG5leHBvcnQgY29uc3QgdG9nZ2xlU3BsaXRNYXBVcGRhdGVyID0gKHN0YXRlLCBhY3Rpb24pID0+ICh7XG4gIC4uLnN0YXRlLFxuICBpc1NwbGl0OiAhc3RhdGUuaXNTcGxpdCxcbiAgLi4uZ2V0TWFwRGltRm9yU3BsaXRNYXAoIXN0YXRlLmlzU3BsaXQsIHN0YXRlKVxufSk7XG5cbmV4cG9ydCBjb25zdCB0b2dnbGVGdWxsU2NyZWVuVXBkYXRlciA9IChzdGF0ZSwgYWN0aW9uKSA9PiAoe1xuICAuLi5zdGF0ZSxcbiAgaXNGdWxsU2NyZWVuOiAhc3RhdGUuaXNGdWxsU2NyZWVuXG4gIC8vIC4uLmdldE1hcERpbUZvckZ1bGxTY3JlZW4oIXN0YXRlLmlzRnVsbFNjcmVlbiwgc3RhdGUpXG59KTtcblxuZXhwb3J0IGNvbnN0IGNsb3NlTWFwQXRJbmRleFVwZGF0ZXIgPSAoc3RhdGUsIGFjdGlvbikgPT5cbiAgdG9nZ2xlU3BsaXRNYXBVcGRhdGVyKHN0YXRlLCBhY3Rpb24pO1xuXG4vLyBIZWxwZXJzXG5mdW5jdGlvbiBnZXRNYXBEaW1Gb3JTcGxpdE1hcChpc1NwbGl0LCBzdGF0ZSkge1xuICByZXR1cm4ge1xuICAgIHdpZHRoOiBpc1NwbGl0ID8gc3RhdGUud2lkdGggLyAyIDogc3RhdGUud2lkdGggKiAyXG4gIH07XG59XG4iXX0=
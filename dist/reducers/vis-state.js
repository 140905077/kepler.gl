'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _handleActions;

// updater functions


var _actionTypes = require('../constants/action-types');

var _actionTypes2 = _interopRequireDefault(_actionTypes);

var _reduxActions = require('redux-actions');

var _visStateUpdaters = require('./vis-state-updaters');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// construct vis-state reducer
var rootReducer = (0, _reduxActions.handleActions)((_handleActions = {}, _handleActions[_actionTypes2.default.ADD_FILTER] = _visStateUpdaters.addFilter, _handleActions[_actionTypes2.default.ADD_LAYER] = _visStateUpdaters.addLayer, _handleActions[_actionTypes2.default.ENLARGE_FILTER] = _visStateUpdaters.enlargeFilter, _handleActions[_actionTypes2.default.INTERACTION_CONFIG_CHANGE] = _visStateUpdaters.updateInteractionConfig, _handleActions[_actionTypes2.default.LAYER_CLICK] = _visStateUpdaters.handleLayerClick, _handleActions[_actionTypes2.default.LAYER_CONFIG_CHANGE] = _visStateUpdaters.updateLayerConfig, _handleActions[_actionTypes2.default.LAYER_HOVER] = _visStateUpdaters.handleLayerHover, _handleActions[_actionTypes2.default.LAYER_TYPE_CHANGE] = _visStateUpdaters.updateLayerType, _handleActions[_actionTypes2.default.LAYER_VIS_CONFIG_CHANGE] = _visStateUpdaters.updateLayerVisConfig, _handleActions[_actionTypes2.default.LAYER_VISUAL_CHANNEL_CONFIG_CHANGE] = _visStateUpdaters.updateLayerVisualChannelConfig, _handleActions[_actionTypes2.default.LOAD_FILES] = _visStateUpdaters.onFileUpload, _handleActions[_actionTypes2.default.LOAD_FILES_ERR] = _visStateUpdaters.onFileUploadError, _handleActions[_actionTypes2.default.MAP_CLICK] = _visStateUpdaters.handleMapClick, _handleActions[_actionTypes2.default.RECEIVE_MAP_CONFIG] = _visStateUpdaters.handleReceiveMapConfig, _handleActions[_actionTypes2.default.REMOVE_DATASET] = _visStateUpdaters.removeDataset, _handleActions[_actionTypes2.default.REMOVE_FILTER] = _visStateUpdaters.removeFilter, _handleActions[_actionTypes2.default.REMOVE_LAYER] = _visStateUpdaters.removeLayer, _handleActions[_actionTypes2.default.REORDER_LAYER] = _visStateUpdaters.reorderLayer, _handleActions[_actionTypes2.default.RESET_MAP_CONFIG] = _visStateUpdaters.handleResetConfig, _handleActions[_actionTypes2.default.SET_FILTER] = _visStateUpdaters.updateFilter, _handleActions[_actionTypes2.default.SET_FILTER_PLOT] = _visStateUpdaters.updateFilterPlot, _handleActions[_actionTypes2.default.SET_VISIBLE_LAYERS_FOR_MAP] = _visStateUpdaters.setVisibleLayersForMap, _handleActions[_actionTypes2.default.SHOW_DATASET_TABLE] = _visStateUpdaters.showDatasetTable, _handleActions[_actionTypes2.default.TOGGLE_FILTER_ANIMATION] = _visStateUpdaters.onToggleFilterAnimation, _handleActions[_actionTypes2.default.TOGGLE_LAYER_FOR_MAP] = _visStateUpdaters.toggleLayerForMap, _handleActions[_actionTypes2.default.TOGGLE_SPLIT_MAP] = _visStateUpdaters.handleSplitToggle, _handleActions[_actionTypes2.default.UPDATE_LAYER_BLENDING] = _visStateUpdaters.updateLayerBlending, _handleActions[_actionTypes2.default.UPDATE_VIS_DATA] = _visStateUpdaters.receiveVisData, _handleActions), _visStateUpdaters.INITIAL_VIS_STATE);

exports.default = rootReducer;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9yZWR1Y2Vycy92aXMtc3RhdGUuanMiXSwibmFtZXMiOlsicm9vdFJlZHVjZXIiLCJBRERfRklMVEVSIiwiQUREX0xBWUVSIiwiRU5MQVJHRV9GSUxURVIiLCJJTlRFUkFDVElPTl9DT05GSUdfQ0hBTkdFIiwiTEFZRVJfQ0xJQ0siLCJMQVlFUl9DT05GSUdfQ0hBTkdFIiwiTEFZRVJfSE9WRVIiLCJMQVlFUl9UWVBFX0NIQU5HRSIsIkxBWUVSX1ZJU19DT05GSUdfQ0hBTkdFIiwiTEFZRVJfVklTVUFMX0NIQU5ORUxfQ09ORklHX0NIQU5HRSIsIkxPQURfRklMRVMiLCJMT0FEX0ZJTEVTX0VSUiIsIk1BUF9DTElDSyIsIlJFQ0VJVkVfTUFQX0NPTkZJRyIsIlJFTU9WRV9EQVRBU0VUIiwiUkVNT1ZFX0ZJTFRFUiIsIlJFTU9WRV9MQVlFUiIsIlJFT1JERVJfTEFZRVIiLCJSRVNFVF9NQVBfQ09ORklHIiwiU0VUX0ZJTFRFUiIsIlNFVF9GSUxURVJfUExPVCIsIlNFVF9WSVNJQkxFX0xBWUVSU19GT1JfTUFQIiwiU0hPV19EQVRBU0VUX1RBQkxFIiwiVE9HR0xFX0ZJTFRFUl9BTklNQVRJT04iLCJUT0dHTEVfTEFZRVJfRk9SX01BUCIsIlRPR0dMRV9TUExJVF9NQVAiLCJVUERBVEVfTEFZRVJfQkxFTkRJTkciLCJVUERBVEVfVklTX0RBVEEiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBR0E7OztBQUhBOzs7O0FBQ0E7O0FBR0E7Ozs7QUFnQ0E7QUFDQSxJQUFNQSxjQUFjLHNFQUNqQixzQkFBWUMsVUFESyxnREFHakIsc0JBQVlDLFNBSEssK0NBS2pCLHNCQUFZQyxjQUxLLG9EQU9qQixzQkFBWUMseUJBUEssOERBU2pCLHNCQUFZQyxXQVRLLHVEQVdqQixzQkFBWUMsbUJBWEssd0RBYWpCLHNCQUFZQyxXQWJLLHVEQWVqQixzQkFBWUMsaUJBZkssc0RBaUJqQixzQkFBWUMsdUJBakJLLDJEQW1CakIsc0JBQVlDLGtDQW5CSyxxRUFxQmpCLHNCQUFZQyxVQXJCSyxtREF1QmpCLHNCQUFZQyxjQXZCSyx3REF5QmpCLHNCQUFZQyxTQXpCSyxxREEyQmpCLHNCQUFZQyxrQkEzQkssNkRBNkJqQixzQkFBWUMsY0E3Qkssb0RBK0JqQixzQkFBWUMsYUEvQkssbURBaUNqQixzQkFBWUMsWUFqQ0ssa0RBbUNqQixzQkFBWUMsYUFuQ0ssbURBcUNqQixzQkFBWUMsZ0JBckNLLHdEQXVDakIsc0JBQVlDLFVBdkNLLG1EQXlDakIsc0JBQVlDLGVBekNLLHVEQTJDakIsc0JBQVlDLDBCQTNDSyw2REE2Q2pCLHNCQUFZQyxrQkE3Q0ssdURBK0NqQixzQkFBWUMsdUJBL0NLLDhEQWlEakIsc0JBQVlDLG9CQWpESyx3REFtRGpCLHNCQUFZQyxnQkFuREssd0RBcURqQixzQkFBWUMscUJBckRLLDBEQXVEakIsc0JBQVlDLGVBdkRLLDJGQUFwQjs7a0JBMkRlNUIsVyIsImZpbGUiOiJ2aXMtc3RhdGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgQWN0aW9uVHlwZXMgZnJvbSAnLi4vY29uc3RhbnRzL2FjdGlvbi10eXBlcyc7XG5pbXBvcnQge2hhbmRsZUFjdGlvbnN9IGZyb20gJ3JlZHV4LWFjdGlvbnMnO1xuXG4vLyB1cGRhdGVyIGZ1bmN0aW9uc1xuaW1wb3J0IHtcbiAgSU5JVElBTF9WSVNfU1RBVEUsXG4gIGFkZEZpbHRlcixcbiAgYWRkTGF5ZXIsXG4gIGVubGFyZ2VGaWx0ZXIsXG4gIGhhbmRsZUxheWVyQ2xpY2ssXG4gIGhhbmRsZUxheWVySG92ZXIsXG4gIGhhbmRsZU1hcENsaWNrLFxuICBvblRvZ2dsZUZpbHRlckFuaW1hdGlvbixcbiAgaGFuZGxlUmVjZWl2ZU1hcENvbmZpZyxcbiAgaGFuZGxlUmVzZXRDb25maWcsXG4gIG9uRmlsZVVwbG9hZCxcbiAgb25GaWxlVXBsb2FkRXJyb3IsXG4gIHJlY2VpdmVWaXNEYXRhLFxuICByZW1vdmVEYXRhc2V0LFxuICByZW1vdmVGaWx0ZXIsXG4gIHJlbW92ZUxheWVyLFxuICByZW9yZGVyTGF5ZXIsXG4gIHNob3dEYXRhc2V0VGFibGUsXG4gIHVwZGF0ZUZpbHRlcixcbiAgdXBkYXRlRmlsdGVyUGxvdCxcbiAgdXBkYXRlSW50ZXJhY3Rpb25Db25maWcsXG4gIHVwZGF0ZUxheWVyQmxlbmRpbmcsXG4gIHVwZGF0ZUxheWVyQ29uZmlnLFxuICB1cGRhdGVMYXllclR5cGUsXG4gIGhhbmRsZVNwbGl0VG9nZ2xlLFxuICBzZXRWaXNpYmxlTGF5ZXJzRm9yTWFwLFxuICB0b2dnbGVMYXllckZvck1hcCxcbiAgdXBkYXRlTGF5ZXJWaXNDb25maWcsXG4gIHVwZGF0ZUxheWVyVmlzdWFsQ2hhbm5lbENvbmZpZ1xufSBmcm9tICcuL3Zpcy1zdGF0ZS11cGRhdGVycyc7XG5cbi8vIGNvbnN0cnVjdCB2aXMtc3RhdGUgcmVkdWNlclxuY29uc3Qgcm9vdFJlZHVjZXIgPSBoYW5kbGVBY3Rpb25zKHtcbiAgW0FjdGlvblR5cGVzLkFERF9GSUxURVJdOiBhZGRGaWx0ZXIsXG5cbiAgW0FjdGlvblR5cGVzLkFERF9MQVlFUl06IGFkZExheWVyLFxuXG4gIFtBY3Rpb25UeXBlcy5FTkxBUkdFX0ZJTFRFUl06IGVubGFyZ2VGaWx0ZXIsXG5cbiAgW0FjdGlvblR5cGVzLklOVEVSQUNUSU9OX0NPTkZJR19DSEFOR0VdOiB1cGRhdGVJbnRlcmFjdGlvbkNvbmZpZyxcblxuICBbQWN0aW9uVHlwZXMuTEFZRVJfQ0xJQ0tdOiBoYW5kbGVMYXllckNsaWNrLFxuXG4gIFtBY3Rpb25UeXBlcy5MQVlFUl9DT05GSUdfQ0hBTkdFXTogdXBkYXRlTGF5ZXJDb25maWcsXG5cbiAgW0FjdGlvblR5cGVzLkxBWUVSX0hPVkVSXTogaGFuZGxlTGF5ZXJIb3ZlcixcblxuICBbQWN0aW9uVHlwZXMuTEFZRVJfVFlQRV9DSEFOR0VdOiB1cGRhdGVMYXllclR5cGUsXG5cbiAgW0FjdGlvblR5cGVzLkxBWUVSX1ZJU19DT05GSUdfQ0hBTkdFXTogdXBkYXRlTGF5ZXJWaXNDb25maWcsXG5cbiAgW0FjdGlvblR5cGVzLkxBWUVSX1ZJU1VBTF9DSEFOTkVMX0NPTkZJR19DSEFOR0VdOiB1cGRhdGVMYXllclZpc3VhbENoYW5uZWxDb25maWcsXG5cbiAgW0FjdGlvblR5cGVzLkxPQURfRklMRVNdOiBvbkZpbGVVcGxvYWQsXG5cbiAgW0FjdGlvblR5cGVzLkxPQURfRklMRVNfRVJSXTogb25GaWxlVXBsb2FkRXJyb3IsXG5cbiAgW0FjdGlvblR5cGVzLk1BUF9DTElDS106IGhhbmRsZU1hcENsaWNrLFxuXG4gIFtBY3Rpb25UeXBlcy5SRUNFSVZFX01BUF9DT05GSUddOiBoYW5kbGVSZWNlaXZlTWFwQ29uZmlnLFxuXG4gIFtBY3Rpb25UeXBlcy5SRU1PVkVfREFUQVNFVF06IHJlbW92ZURhdGFzZXQsXG5cbiAgW0FjdGlvblR5cGVzLlJFTU9WRV9GSUxURVJdOiByZW1vdmVGaWx0ZXIsXG5cbiAgW0FjdGlvblR5cGVzLlJFTU9WRV9MQVlFUl06IHJlbW92ZUxheWVyLFxuXG4gIFtBY3Rpb25UeXBlcy5SRU9SREVSX0xBWUVSXTogcmVvcmRlckxheWVyLFxuXG4gIFtBY3Rpb25UeXBlcy5SRVNFVF9NQVBfQ09ORklHXTogaGFuZGxlUmVzZXRDb25maWcsXG5cbiAgW0FjdGlvblR5cGVzLlNFVF9GSUxURVJdOiB1cGRhdGVGaWx0ZXIsXG5cbiAgW0FjdGlvblR5cGVzLlNFVF9GSUxURVJfUExPVF06IHVwZGF0ZUZpbHRlclBsb3QsXG5cbiAgW0FjdGlvblR5cGVzLlNFVF9WSVNJQkxFX0xBWUVSU19GT1JfTUFQXTogc2V0VmlzaWJsZUxheWVyc0Zvck1hcCxcblxuICBbQWN0aW9uVHlwZXMuU0hPV19EQVRBU0VUX1RBQkxFXTogc2hvd0RhdGFzZXRUYWJsZSxcblxuICBbQWN0aW9uVHlwZXMuVE9HR0xFX0ZJTFRFUl9BTklNQVRJT05dOiBvblRvZ2dsZUZpbHRlckFuaW1hdGlvbixcblxuICBbQWN0aW9uVHlwZXMuVE9HR0xFX0xBWUVSX0ZPUl9NQVBdOiB0b2dnbGVMYXllckZvck1hcCxcblxuICBbQWN0aW9uVHlwZXMuVE9HR0xFX1NQTElUX01BUF06IGhhbmRsZVNwbGl0VG9nZ2xlLFxuXG4gIFtBY3Rpb25UeXBlcy5VUERBVEVfTEFZRVJfQkxFTkRJTkddOiB1cGRhdGVMYXllckJsZW5kaW5nLFxuXG4gIFtBY3Rpb25UeXBlcy5VUERBVEVfVklTX0RBVEFdOiByZWNlaXZlVmlzRGF0YVxuXG59LCBJTklUSUFMX1ZJU19TVEFURSk7XG5cbmV4cG9ydCBkZWZhdWx0IHJvb3RSZWR1Y2VyO1xuIl19
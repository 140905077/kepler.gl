'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends3 = require('babel-runtime/helpers/extends');

var _extends4 = _interopRequireDefault(_extends3);

var _keymirror = require('keymirror');

var _keymirror2 = _interopRequireDefault(_keymirror);

var _defaultSettings = require('./default-settings');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ActionTypes = (0, _keymirror2.default)({

  // visState
  ADD_DATA: null,
  ADD_FILTER: null,
  ADD_LAYER: null,
  INTERACTION_CONFIG_CHANGE: null,
  LAYER_CONFIG_CHANGE: null,
  LAYER_VISUAL_CHANNEL_CONFIG_CHANGE: null,
  LAYER_TYPE_CHANGE: null,
  LAYER_VIS_CONFIG_CHANGE: null,
  LAYER_HOVER: null,
  LAYER_CLICK: null,
  MAP_CLICK: null,
  REMOVE_FILTER: null,
  REMOVE_LAYER: null,
  REMOVE_DATASET: null,
  REORDER_LAYER: null,
  SET_FILTER: null,
  SHOW_DATASET_TABLE: null,
  UPDATE_LAYER_BLENDING: null,
  UPDATE_VIS_DATA: null,
  TOGGLE_FILTER_ANIMATION: null,
  TOGGLE_LAYER_CONFIG_ACTIVE: null,
  ENLARGE_FILTER: null,
  SET_VISIBLE_LAYERS_FOR_MAP: null,
  TOGGLE_LAYER_FOR_MAP: null,
  SET_FILTER_PLOT: null,
  LOAD_FILES: null,
  LOAD_FILES_ERR: null,

  // mapState
  UPDATE_MAP: null,
  FIT_BOUNDS: null,
  TOGGLE_PERSPECTIVE: null,
  TOGGLE_SPLIT_MAP: null,
  TOGGLE_FULLSCREEN: null,

  // mapStyle
  MAP_CONFIG_CHANGE: null,
  SET_DEFAULT_MAP_STYLE: null,
  MAP_STYLE_CHANGE: null,
  LOAD_MAP_STYLES: null,
  LOAD_MAP_STYLE_ERR: null,
  MAP_BUILDING_CHANGE: null,

  // uiState
  TOGGLE_SIDE_PANEL: null,
  TOGGLE_MODAL: null,
  OPEN_DELETE_MODAL: null,

  // buildingData
  UPDATE_BUILDING_TILES: null,
  LOAD_BUILDING_TILE: null,
  LOAD_BUILDING_TILE_START: null,
  LOAD_BUILDING_TILE_SUCCESS: null,
  LOAD_BUILDING_TILE_ERROR: null,
  INITIATE_BUILDING_DATA: null,

  // all
  INIT: null,
  RECEIVE_MAP_CONFIG: null,
  RESET_MAP_CONFIG: null
});

var addPrefix = function addPrefix(actions) {
  return Object.keys(actions).reduce(function (accu, key) {
    var _extends2;

    return (0, _extends4.default)({}, accu, (_extends2 = {}, _extends2[key] = '' + _defaultSettings.ACTION_PREFIX + actions[key], _extends2));
  }, {});
};

exports.default = addPrefix(ActionTypes);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9jb25zdGFudHMvYWN0aW9uLXR5cGVzLmpzIl0sIm5hbWVzIjpbIkFjdGlvblR5cGVzIiwiQUREX0RBVEEiLCJBRERfRklMVEVSIiwiQUREX0xBWUVSIiwiSU5URVJBQ1RJT05fQ09ORklHX0NIQU5HRSIsIkxBWUVSX0NPTkZJR19DSEFOR0UiLCJMQVlFUl9WSVNVQUxfQ0hBTk5FTF9DT05GSUdfQ0hBTkdFIiwiTEFZRVJfVFlQRV9DSEFOR0UiLCJMQVlFUl9WSVNfQ09ORklHX0NIQU5HRSIsIkxBWUVSX0hPVkVSIiwiTEFZRVJfQ0xJQ0siLCJNQVBfQ0xJQ0siLCJSRU1PVkVfRklMVEVSIiwiUkVNT1ZFX0xBWUVSIiwiUkVNT1ZFX0RBVEFTRVQiLCJSRU9SREVSX0xBWUVSIiwiU0VUX0ZJTFRFUiIsIlNIT1dfREFUQVNFVF9UQUJMRSIsIlVQREFURV9MQVlFUl9CTEVORElORyIsIlVQREFURV9WSVNfREFUQSIsIlRPR0dMRV9GSUxURVJfQU5JTUFUSU9OIiwiVE9HR0xFX0xBWUVSX0NPTkZJR19BQ1RJVkUiLCJFTkxBUkdFX0ZJTFRFUiIsIlNFVF9WSVNJQkxFX0xBWUVSU19GT1JfTUFQIiwiVE9HR0xFX0xBWUVSX0ZPUl9NQVAiLCJTRVRfRklMVEVSX1BMT1QiLCJMT0FEX0ZJTEVTIiwiTE9BRF9GSUxFU19FUlIiLCJVUERBVEVfTUFQIiwiRklUX0JPVU5EUyIsIlRPR0dMRV9QRVJTUEVDVElWRSIsIlRPR0dMRV9TUExJVF9NQVAiLCJUT0dHTEVfRlVMTFNDUkVFTiIsIk1BUF9DT05GSUdfQ0hBTkdFIiwiU0VUX0RFRkFVTFRfTUFQX1NUWUxFIiwiTUFQX1NUWUxFX0NIQU5HRSIsIkxPQURfTUFQX1NUWUxFUyIsIkxPQURfTUFQX1NUWUxFX0VSUiIsIk1BUF9CVUlMRElOR19DSEFOR0UiLCJUT0dHTEVfU0lERV9QQU5FTCIsIlRPR0dMRV9NT0RBTCIsIk9QRU5fREVMRVRFX01PREFMIiwiVVBEQVRFX0JVSUxESU5HX1RJTEVTIiwiTE9BRF9CVUlMRElOR19USUxFIiwiTE9BRF9CVUlMRElOR19USUxFX1NUQVJUIiwiTE9BRF9CVUlMRElOR19USUxFX1NVQ0NFU1MiLCJMT0FEX0JVSUxESU5HX1RJTEVfRVJST1IiLCJJTklUSUFURV9CVUlMRElOR19EQVRBIiwiSU5JVCIsIlJFQ0VJVkVfTUFQX0NPTkZJRyIsIlJFU0VUX01BUF9DT05GSUciLCJhZGRQcmVmaXgiLCJPYmplY3QiLCJrZXlzIiwiYWN0aW9ucyIsInJlZHVjZSIsImFjY3UiLCJrZXkiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQTs7OztBQUNBOzs7O0FBRUEsSUFBTUEsY0FBYyx5QkFBVTs7QUFFNUI7QUFDQUMsWUFBVSxJQUhrQjtBQUk1QkMsY0FBWSxJQUpnQjtBQUs1QkMsYUFBVyxJQUxpQjtBQU01QkMsNkJBQTJCLElBTkM7QUFPNUJDLHVCQUFxQixJQVBPO0FBUTVCQyxzQ0FBb0MsSUFSUjtBQVM1QkMscUJBQW1CLElBVFM7QUFVNUJDLDJCQUF5QixJQVZHO0FBVzVCQyxlQUFhLElBWGU7QUFZNUJDLGVBQWEsSUFaZTtBQWE1QkMsYUFBVyxJQWJpQjtBQWM1QkMsaUJBQWUsSUFkYTtBQWU1QkMsZ0JBQWMsSUFmYztBQWdCNUJDLGtCQUFnQixJQWhCWTtBQWlCNUJDLGlCQUFlLElBakJhO0FBa0I1QkMsY0FBWSxJQWxCZ0I7QUFtQjVCQyxzQkFBb0IsSUFuQlE7QUFvQjVCQyx5QkFBdUIsSUFwQks7QUFxQjVCQyxtQkFBaUIsSUFyQlc7QUFzQjVCQywyQkFBeUIsSUF0Qkc7QUF1QjVCQyw4QkFBNEIsSUF2QkE7QUF3QjVCQyxrQkFBZ0IsSUF4Qlk7QUF5QjVCQyw4QkFBNEIsSUF6QkE7QUEwQjVCQyx3QkFBc0IsSUExQk07QUEyQjVCQyxtQkFBaUIsSUEzQlc7QUE0QjVCQyxjQUFZLElBNUJnQjtBQTZCNUJDLGtCQUFnQixJQTdCWTs7QUErQjVCO0FBQ0FDLGNBQVksSUFoQ2dCO0FBaUM1QkMsY0FBWSxJQWpDZ0I7QUFrQzVCQyxzQkFBb0IsSUFsQ1E7QUFtQzVCQyxvQkFBa0IsSUFuQ1U7QUFvQzVCQyxxQkFBbUIsSUFwQ1M7O0FBc0M1QjtBQUNBQyxxQkFBbUIsSUF2Q1M7QUF3QzVCQyx5QkFBdUIsSUF4Q0s7QUF5QzVCQyxvQkFBa0IsSUF6Q1U7QUEwQzVCQyxtQkFBaUIsSUExQ1c7QUEyQzVCQyxzQkFBb0IsSUEzQ1E7QUE0QzVCQyx1QkFBcUIsSUE1Q087O0FBOEM1QjtBQUNBQyxxQkFBbUIsSUEvQ1M7QUFnRDVCQyxnQkFBYyxJQWhEYztBQWlENUJDLHFCQUFtQixJQWpEUzs7QUFtRDVCO0FBQ0FDLHlCQUF1QixJQXBESztBQXFENUJDLHNCQUFvQixJQXJEUTtBQXNENUJDLDRCQUEwQixJQXRERTtBQXVENUJDLDhCQUE0QixJQXZEQTtBQXdENUJDLDRCQUEwQixJQXhERTtBQXlENUJDLDBCQUF3QixJQXpESTs7QUEyRDVCO0FBQ0FDLFFBQU0sSUE1RHNCO0FBNkQ1QkMsc0JBQW9CLElBN0RRO0FBOEQ1QkMsb0JBQWtCO0FBOURVLENBQVYsQ0FBcEI7O0FBaUVBLElBQU1DLFlBQVksU0FBWkEsU0FBWTtBQUFBLFNBQ2hCQyxPQUFPQyxJQUFQLENBQVlDLE9BQVosRUFBcUJDLE1BQXJCLENBQTRCLFVBQUNDLElBQUQsRUFBT0MsR0FBUDtBQUFBOztBQUFBLHNDQUN2QkQsSUFEdUIsNkJBRXpCQyxHQUZ5QiwwQ0FFQUgsUUFBUUcsR0FBUixDQUZBO0FBQUEsR0FBNUIsRUFHSSxFQUhKLENBRGdCO0FBQUEsQ0FBbEI7O2tCQU1lTixVQUFVbkQsV0FBVixDIiwiZmlsZSI6ImFjdGlvbi10eXBlcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBrZXlNaXJyb3IgZnJvbSAna2V5bWlycm9yJztcbmltcG9ydCB7QUNUSU9OX1BSRUZJWH0gZnJvbSAnLi9kZWZhdWx0LXNldHRpbmdzJztcblxuY29uc3QgQWN0aW9uVHlwZXMgPSBrZXlNaXJyb3Ioe1xuXG4gIC8vIHZpc1N0YXRlXG4gIEFERF9EQVRBOiBudWxsLFxuICBBRERfRklMVEVSOiBudWxsLFxuICBBRERfTEFZRVI6IG51bGwsXG4gIElOVEVSQUNUSU9OX0NPTkZJR19DSEFOR0U6IG51bGwsXG4gIExBWUVSX0NPTkZJR19DSEFOR0U6IG51bGwsXG4gIExBWUVSX1ZJU1VBTF9DSEFOTkVMX0NPTkZJR19DSEFOR0U6IG51bGwsXG4gIExBWUVSX1RZUEVfQ0hBTkdFOiBudWxsLFxuICBMQVlFUl9WSVNfQ09ORklHX0NIQU5HRTogbnVsbCxcbiAgTEFZRVJfSE9WRVI6IG51bGwsXG4gIExBWUVSX0NMSUNLOiBudWxsLFxuICBNQVBfQ0xJQ0s6IG51bGwsXG4gIFJFTU9WRV9GSUxURVI6IG51bGwsXG4gIFJFTU9WRV9MQVlFUjogbnVsbCxcbiAgUkVNT1ZFX0RBVEFTRVQ6IG51bGwsXG4gIFJFT1JERVJfTEFZRVI6IG51bGwsXG4gIFNFVF9GSUxURVI6IG51bGwsXG4gIFNIT1dfREFUQVNFVF9UQUJMRTogbnVsbCxcbiAgVVBEQVRFX0xBWUVSX0JMRU5ESU5HOiBudWxsLFxuICBVUERBVEVfVklTX0RBVEE6IG51bGwsXG4gIFRPR0dMRV9GSUxURVJfQU5JTUFUSU9OOiBudWxsLFxuICBUT0dHTEVfTEFZRVJfQ09ORklHX0FDVElWRTogbnVsbCxcbiAgRU5MQVJHRV9GSUxURVI6IG51bGwsXG4gIFNFVF9WSVNJQkxFX0xBWUVSU19GT1JfTUFQOiBudWxsLFxuICBUT0dHTEVfTEFZRVJfRk9SX01BUDogbnVsbCxcbiAgU0VUX0ZJTFRFUl9QTE9UOiBudWxsLFxuICBMT0FEX0ZJTEVTOiBudWxsLFxuICBMT0FEX0ZJTEVTX0VSUjogbnVsbCxcblxuICAvLyBtYXBTdGF0ZVxuICBVUERBVEVfTUFQOiBudWxsLFxuICBGSVRfQk9VTkRTOiBudWxsLFxuICBUT0dHTEVfUEVSU1BFQ1RJVkU6IG51bGwsXG4gIFRPR0dMRV9TUExJVF9NQVA6IG51bGwsXG4gIFRPR0dMRV9GVUxMU0NSRUVOOiBudWxsLFxuXG4gIC8vIG1hcFN0eWxlXG4gIE1BUF9DT05GSUdfQ0hBTkdFOiBudWxsLFxuICBTRVRfREVGQVVMVF9NQVBfU1RZTEU6IG51bGwsXG4gIE1BUF9TVFlMRV9DSEFOR0U6IG51bGwsXG4gIExPQURfTUFQX1NUWUxFUzogbnVsbCxcbiAgTE9BRF9NQVBfU1RZTEVfRVJSOiBudWxsLFxuICBNQVBfQlVJTERJTkdfQ0hBTkdFOiBudWxsLFxuXG4gIC8vIHVpU3RhdGVcbiAgVE9HR0xFX1NJREVfUEFORUw6IG51bGwsXG4gIFRPR0dMRV9NT0RBTDogbnVsbCxcbiAgT1BFTl9ERUxFVEVfTU9EQUw6IG51bGwsXG5cbiAgLy8gYnVpbGRpbmdEYXRhXG4gIFVQREFURV9CVUlMRElOR19USUxFUzogbnVsbCxcbiAgTE9BRF9CVUlMRElOR19USUxFOiBudWxsLFxuICBMT0FEX0JVSUxESU5HX1RJTEVfU1RBUlQ6IG51bGwsXG4gIExPQURfQlVJTERJTkdfVElMRV9TVUNDRVNTOiBudWxsLFxuICBMT0FEX0JVSUxESU5HX1RJTEVfRVJST1I6IG51bGwsXG4gIElOSVRJQVRFX0JVSUxESU5HX0RBVEE6IG51bGwsXG5cbiAgLy8gYWxsXG4gIElOSVQ6IG51bGwsXG4gIFJFQ0VJVkVfTUFQX0NPTkZJRzogbnVsbCxcbiAgUkVTRVRfTUFQX0NPTkZJRzogbnVsbFxufSk7XG5cbmNvbnN0IGFkZFByZWZpeCA9IGFjdGlvbnMgPT5cbiAgT2JqZWN0LmtleXMoYWN0aW9ucykucmVkdWNlKChhY2N1LCBrZXkpID0+ICh7XG4gICAgLi4uYWNjdSxcbiAgICBba2V5XTogYCR7QUNUSU9OX1BSRUZJWH0ke2FjdGlvbnNba2V5XX1gXG4gIH0pLCB7fSk7XG5cbmV4cG9ydCBkZWZhdWx0IGFkZFByZWZpeChBY3Rpb25UeXBlcyk7XG4iXX0=